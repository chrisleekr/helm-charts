# Worker deployment for queue mode
# Pulls workflow executions from the queue and executes them
{{- if .Values.worker.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "n8n.fullname" . }}-worker
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
    app.kubernetes.io/component: worker
spec:
  replicas: {{ .Values.worker.replicaCount }}
  selector:
    matchLabels:
      {{- include "n8n.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: worker
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "n8n.labels" . | nindent 8 }}
        app.kubernetes.io/component: worker
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "n8n.serviceAccountName" . }}
      {{- with .Values.worker.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-worker
          {{- with .Values.worker.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.worker.image.pullPolicy }}
          command:
            - n8n
            - worker # Runs as worker process
          env:
            - name: GENERIC_TIMEZONE
              value: "{{ .Values.global.n8n.timezone }}"
            - name: N8N_LOG_LEVEL
              value: "{{ .Values.global.n8n.logLevel }}"
            {{- if .Values.global.n8n.metricsEnabled }}
            - name: N8N_METRICS
              value: "true"
            {{- end }}
            {{- if .Values.encryption.existingSecret }}
            - name: N8N_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.encryption.existingSecret }}
                  key: encryptionKey
            {{- else if .Values.encryption.key }}
            - name: N8N_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "n8n.fullname" . }}-encryption
                  key: encryptionKey
            {{- end }}
            {{- if eq .Values.database.type "postgres" }}
            - name: DB_TYPE
              value: "postgresdb"
            {{- if .Values.database.postgres.external.enabled }}
            - name: DB_POSTGRESDB_HOST
              value: "{{ .Values.database.postgres.external.host }}"
            - name: DB_POSTGRESDB_PORT
              value: "{{ .Values.database.postgres.external.port }}"
            - name: DB_POSTGRESDB_DATABASE
              value: "{{ .Values.database.postgres.external.database }}"
            - name: DB_POSTGRESDB_USER
              value: "{{ .Values.database.postgres.external.username }}"
            {{- if .Values.database.postgres.external.existingSecret }}
            - name: DB_POSTGRESDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.postgres.external.existingSecret }}
                  key: password
            {{- else }}
            - name: DB_POSTGRESDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "n8n.fullname" . }}-postgres-external
                  key: password
            {{- end }}
            - name: DB_POSTGRESDB_SSL_MODE
              value: "{{ .Values.database.postgres.external.sslMode }}"
            {{- else }}
            - name: DB_POSTGRESDB_HOST
              value: "{{ include "n8n.fullname" . }}-postgres"
            - name: DB_POSTGRESDB_PORT
              value: "5432"
            - name: DB_POSTGRESDB_DATABASE
              value: "n8n"
            - name: DB_POSTGRESDB_USER
              value: "n8n"
            {{- if .Values.database.postgres.internal.existingSecret }}
            - name: DB_POSTGRESDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.postgres.internal.existingSecret }}
                  key: password
            {{- else }}
            - name: DB_POSTGRESDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "n8n.fullname" . }}-postgres-internal
                  key: password
            {{- end }}
            {{- end }}
            {{- end }}
            # Reference: https://docs.n8n.io/hosting/configuration/environment-variables/queue-mode/
            {{- if .Values.redis.enabled }}
            {{- if .Values.redis.external.enabled }}
            - name: QUEUE_BULL_REDIS_HOST
              value: "{{ .Values.redis.external.host }}"
            - name: QUEUE_BULL_REDIS_PORT
              value: "{{ .Values.redis.external.port }}"
            - name: QUEUE_BULL_REDIS_DB
              value: "{{ .Values.redis.external.database }}"
            {{- if .Values.redis.external.existingSecret }}
            - name: QUEUE_BULL_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.external.existingSecret }}
                  key: password
            {{- else if .Values.redis.external.password }}
            - name: QUEUE_BULL_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "n8n.fullname" . }}-redis-external
                  key: password
            {{- end }}
            {{- else if .Values.redis.internal.enabled }}
            - name: QUEUE_BULL_REDIS_HOST
              value: "{{ include "n8n.fullname" . }}-redis"
            - name: QUEUE_BULL_REDIS_PORT
              value: "6379"
            - name: QUEUE_BULL_REDIS_DB
              value: "0"
            {{- end }}
            - name: EXECUTIONS_MODE
              value: "queue"
            {{- end }}
            {{- with .Values.worker.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.worker.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if .Values.persistence.enabled }}
            - name: n8n-data
              mountPath: /home/node/.n8n
            {{- end }}
      volumes:
        {{- if .Values.persistence.enabled }}
        - name: n8n-data
          persistentVolumeClaim:
            claimName: {{ include "n8n.fullname" . }}-data
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
